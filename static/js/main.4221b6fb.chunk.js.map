{"version":3,"sources":["Components/Contact/Contact.tsx","Components/Home/Home.tsx","Components/About/About.tsx","ColorModeSwitcher.tsx","constants.tsx","Components/SideBar/SideBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Contact","initialValues","firstName","lastName","email","onSubmit","values","setSubmitting","setTimeout","alert","JSON","stringify","htmlFor","id","name","placeholder","type","Home","templateRows","h","padding","src","borderRadius","boxSize","fontSize","color","About","maxW","ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","variant","marginLeft","onClick","icon","aria-label","appName","SideBar","iconProps","bgColor","w","background","templateColumns","gap","flexDirection","paddingLeft","to","bg","href","App","className","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4221b6fb.chunk.js","sourcesContent":["import 'react-app-polyfill/ie11';\nimport * as React from 'react';\nimport { Formik, Field, Form, FormikHelpers } from 'formik';\n\ninterface Values {\n  firstName: string;\n  lastName: string;\n  email: string;\n}\n\nexport const Contact = () => {\n  return (\n    <Formik\n    initialValues={{\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\"\n    }}\n    onSubmit={(values: Values, { setSubmitting }: FormikHelpers<Values>) => {\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 500);\n    }}\n  >\n    <Form>\n    <div>\n          <label htmlFor=\"firstName\">First Name</label>\n          <Field id=\"firstName\" name=\"firstName\" placeholder=\"John\" />\n\n          <label htmlFor=\"lastName\">Last Name</label>\n          <Field id=\"lastName\" name=\"lastName\" placeholder=\"Doe\" />\n\n          <label htmlFor=\"email\">Email</label>\n          <Field\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"john@acme.com\"\n            type=\"email\"\n          />\n\n          <button type=\"submit\">Submit</button>\n    </div>\n    </Form>\n  </Formik>\n  \n  );\n};\n","import \"react-app-polyfill/ie11\";\nimport * as React from \"react\";\nimport { Box, Center, Container, Grid, GridItem, Heading, Image } from \"@chakra-ui/react\";\n\n// import { Link } from 'react-router-dom';\n// import { About } from '../About/About';\n\nexport const Home = () => {\n  //   const formik  = useFormikContext();\n  //   const values = formik?.values as Values;\n  return (\n    <Grid\n        templateRows=\"repeat(1, 1fr)\"\n        >\n    <Center h=\"200px\">\n      <GridItem h=\"0px\" padding=\"0px\"><Image src=\"https://raw.githubusercontent.com/yaritaft/my_django_web_page/master/staticfiles/cv/images/DSC4523.c223f84f886b.jpg\" borderRadius=\"full\" boxSize=\"150px\" /> </GridItem> \n    </Center>\n    <Center h=\"0px\" padding=\"80px\">\n      <GridItem h=\"0px\" padding=\"0px\"><Heading fontSize=\"50px\">YARI IVAN TAFT</Heading> </GridItem> \n    </Center>\n    <Center h=\"0px\" padding=\"5px\">\n      <GridItem h=\"15px\" padding=\"15px\"><Container color=\"GrayText\" fontSize=\"30px\">Full Stack Developer - Working at Vindow</Container> </GridItem> \n    </Center>\n      </Grid>\n  );\n};","import * as React from 'react';\nimport { Container, Center } from \"@chakra-ui/react\";\n// import { Formik, Field, Form, FormikHelpers, useFormikContext } from 'formik';\n\n// interface Values {\n//   firstName: string;\n//   lastName: string;\n//   email: string;\n// }\n\nexport const About = () => {\n//   const formik  = useFormikContext();\n// const { values, submitForm } = useFormikContext();\n//   const values = formik?.values as Values;\n  return (\n    <Center h=\"500px\">\n\n    <Container fontSize=\"xl\" maxW=\"xl\" >\n      My name is Yari Ivan Taft, I am full stack developer. I love learning things and teaching those things. I help people to improve their jobs conditions. If you want to know more about me, you have my github and social networks on the icons above.\n    </Container>\n    </Center>\n  );\n};\n","import * as React from \"react\"\nimport {\n  useColorMode,\n  useColorModeValue,\n  IconButton,\n  IconButtonProps,\n} from \"@chakra-ui/react\"\nimport { FaMoon, FaSun } from \"react-icons/fa\"\n\ntype ColorModeSwitcherProps = Omit<IconButtonProps, \"aria-label\">\n\nexport const ColorModeSwitcher: React.FC<ColorModeSwitcherProps> = (props) => {\n  const { toggleColorMode } = useColorMode()\n  const text = useColorModeValue(\"dark\", \"light\")\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun)\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      aria-label={`Switch to ${text} mode`}\n      {...props}\n    />\n  )\n}\n","export const appName=\"/react-personal-page\";","import \"react-app-polyfill/ie11\";\nimport * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Grid, Text, IconButton } from \"@chakra-ui/react\";\nimport { ColorModeSwitcher } from \"../../ColorModeSwitcher\";\nimport { FaDiscord, FaGithub, FaLinkedinIn, FaYoutube } from \"react-icons/fa\";\nimport { appName } from \"../../constants\";\n\nexport const SideBar = () => {\n  const iconProps = {\n    bgColor: \"black\",\n    color: \"white\",\n    w: \"40%\"\n  };\n\n  return (\n    <Grid background={\"black\"} templateColumns=\"repeat(2, 1fr)\" gap={\"50%\"} padding={5}>\n      <Grid templateColumns=\"repeat(2, 0fr)\" flexDirection=\"row\" paddingLeft={\"40%\"}>\n        <Link to={`${appName}/home`}>\n          <Button borderRadius=\"md\" w=\"80%\" h=\"10\" bg=\"black\">\n            <Text color=\"white\">HOME</Text>\n          </Button>\n        </Link>\n        <Link to={`${appName}/about`}>\n          <Button borderRadius=\"md\" w=\"80%\" h=\"10\" bg=\"black\">\n            <Text color=\"white\">ABOUT</Text>\n          </Button>\n        </Link>\n      </Grid>\n      <Grid flexDirection={\"row\"} templateColumns=\"repeat(5, 0fr)\" gap={0}>\n        <a href=\"https://www.youtube.com/channel/UC6Itkp5eh2lKwCW_IfeiccA\">\n          <IconButton {...iconProps} aria-label=\"youtube\" icon={<FaYoutube />} />\n        </a>\n        <a href=\"https://www.linkedin.com/in/yari-ivan-taft-4122a7153/\">\n          <IconButton {...iconProps} aria-label=\"linkedIn\" icon={<FaLinkedinIn />} />\n        </a>\n        <a href=\"https://www.github.com/yaritaft\">\n          <IconButton {...iconProps} aria-label=\"github\" icon={<FaGithub />} />\n        </a>\n        <IconButton {...iconProps} aria-label=\"discord\" icon={<FaDiscord />} />\n        <ColorModeSwitcher flexDirection={\"row\"} w=\"40%\" bgColor={\"black\"} color={\"white\"} />\n      </Grid>\n    </Grid>\n  );\n};\n","import React from \"react\";\n// import './App.css';\nimport { Contact } from \"./Components/Contact/Contact\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { Home } from \"./Components/Home/Home\";\nimport { About } from \"./Components/About/About\";\nimport { SideBar } from \"./Components/SideBar/SideBar\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { appName } from \"./constants\";\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <BrowserRouter>\n          <SideBar></SideBar>\n            <Switch>\n              <Route exact path={`${appName}/contact`}>\n                <Contact />\n              </Route>\n              <Route exact path={`${appName}/home`}>\n                <Home />\n              </Route>\n              <Route exact path={`${appName}/about`}>\n                <About />\n              </Route>\n            </Switch>\n          </BrowserRouter>\n        </header>\n      </div>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n   </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}